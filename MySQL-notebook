
创建数据库   create   database   _name

删除数据库   drop  database   _name

选择数据库   use  _name



创建MySQL表    create  table  _name  (column_name  column_type)
create table tutorials_tbl(
   tutorial_id INT NOT NULL AUTO_INCREMENT,
   tutorial_title VARCHAR(100) NOT NULL,
   tutorial_author VARCHAR(40) NOT NULL,
   submission_date DATE,
   PRIMARY KEY ( tutorial_id )
);


字段使用NOT NULL属性，是因为我们不希望这个字段的值为NULL。 因此，如果用户将尝试创建具有NULL值的记录，那么MySQL会产生错误。


字段的AUTO_INCREMENT属性告诉MySQL自动增加id字段下一个可用编号。


关键字PRIMARY KEY用于定义此列作为主键。可以使用逗号分隔多个列来定义主键。



删除MySQL表     drop table _name
MySQL插入数据    insert into _name  (field1, field2, ...fieldN)
			values
			(value1, value2,....valueN);




MySQL SELECT 查询   
	SELECT field1, field2,...fieldN table_name1, table_name2...
	[WHERE Clause]
	[OFFSET M ][LIMIT N]
	可以使用分隔的一个或多个逗号从多个表，以及使用WHERE子句包括各种条件，但WHERE子句是SELECT命令的可选部分
	可以在一个SELECT命令指定读取一个或多个字段
	可以指定星号(*)代替选择的字段。在这种情况下，将返回所有字段
	可以指定任意的条件在 WHERE 子句后面
	可以使用OFFSET指定一个偏移量，SELECT从那里开始返回记录。默认情况下 offset 的值是 0
	可以使用LIMIT属性限制返回的数量




	SELECT field1, field2,...fieldN table_name1, table_name2...
	[WHERE condition1 [AND [OR]] condition2.....
	可以使用逗号分隔一个或多个表，以及WHERE子句包括各种条件，但WHERE子句只是SELECT命令的可选部分
	可以指定使用任何条件在WHERE子句中
	可以指定一个以上的条件在使用AND或OR运算符中
	WHERE子句可以用DELETE 或 UPDATE的SQL命令一起，也可以指定一个条件使用。



MySQL update 更新数据
	UPDATE table_name SET field1=new-value1, field2=new_value2
	[WHERE Clause]
	可以更新一个或多个字段
	可以指定使用任何条件在where语句中
	可以一次更新一个表中的值



MySQL delete  删除数据
	DELETE　FROM   table_name   [WHERE Clause]
	如果where子句没有指定，则所有MySQL表中的记录将被删除
	可以指定使用任何条件在where中
	可以一次删除一个表中的所有记录



MySQL Like  子句
	SELECT field1, field2,...fieldN table_name, table_name2...
	WHERE field1 LIKE condition1 [AND [or]] field2 = '[%]somevalue'
	可以指定使用任何条件在WHERE子句中
	可以使用LIKE子句在WHERE子句中
	可以使用LIKE子句代替等号（=）
	当LIKE连同%符号使用，那么它就会像一个元字符的搜索
	可以指定一个以上的条件使用AND或OR运算符
	WHERE...LIKE子句可以使用SQL命令的DELETE或UODATE，也可以指定一个条件



MySQL order by 排序
	SELECT field1, field2, ... fieldN  table_name1, table_name2...
	ORDER BY field1, [field2...] [ASC [DESC]]
	可以排序返回所列出提供的任何字段的结果
	可以在多个字段排序结果
	可以使用关键字ASC或DESC来执行升序或降序排序。默认情况下，按升序排列
	可以使用WHERE...LIKE子句以通用的方式放置条件



MySQL　join联接  .




  如果您忘记了数据库或表的名称，或给定表的结构（例如，其列被调用），该怎么办？MySQL通过几个语句来解决这个问题，提供有关它支持的数据库和表的信息。

您以前看过SHOW DATABASES，列出了由服务器管理的数据库。要查找当前选择的数据库，请使用以下 DATABASE()功能：

mysql> SELECT DATABASE();
+------------+
| DATABASE() |
+------------+
| menagerie  |
+------------+
如果还没有选择任何数据库，结果是 NULL。




要找出默认数据库包含的表（例如，当您不确定表的名称）时，请使用以下语句：

mysql> SHOW TABLES;
+---------------------+
| Tables_in_menagerie |
+---------------------+
| event               |
| pet                 |
+---------------------+




要验证您的表是按预期的方式创建的，请使用DESCRIBE语句：


mysql> DESCRIBE pet;
+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| name    | varchar(20) | YES  |     | NULL    |       |
| owner   | varchar(20) | YES  |     | NULL    |       |
| species | varchar(20) | YES  |     | NULL    |       |
| sex     | char(1)     | YES  |     | NULL    |       |
| birth   | date        | YES  |     | NULL    |       |
| death   | date        | YES  |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
您可以随时使用DESCRIBE，例如，如果您忘记了表中列的名称或者它们具有什么类型。
